name: Release
on:
  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get Version
        id: get_version
        run: |
          VERSION=$(cat wails.json | jq -r .info.productVersion)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

  build:
    needs: version
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows/amd64
            artifact_name: Smart-Spotlight-AI.exe
            asset_name: Smart-Spotlight-AI-windows-amd64.exe
          - os: macos-latest
            platform: darwin/universal
            artifact_name: Smart-Spotlight-AI
            asset_name: Smart-Spotlight-AI-mac-universal
          - os: ubuntu-latest
            platform: linux/amd64
            artifact_name: Smart-Spotlight-AI
            asset_name: Smart-Spotlight-AI-linux-amd64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21.0'
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxkbcommon-x11-dev pkg-config xvfb

      - name: Install Task (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          iwr -useb get.scoop.sh -outfile 'install-scoop.ps1'
          .\install-scoop.ps1 -RunAsAdmin
          scoop install task
        shell: pwsh

      - name: Install Task (Unix)
        if: matrix.os != 'windows-latest'
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install Dependencies and Build
        if: matrix.os != 'ubuntu-latest'
        run: |
          task deps
          wails build -platform ${{ matrix.platform }} -trimpath -ldflags="-s -w"

      - name: Install Dependencies and Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          task deps
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          export DISPLAY=:99.0
          wails build -platform ${{ matrix.platform }} -trimpath -ldflags="-s -w"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: build/bin/${{ matrix.artifact_name }}

  release:
    needs: [version, build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.version.outputs.version }}
          name: Release v${{ needs.version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            artifacts/Smart-Spotlight-AI-windows-amd64.exe/Smart-Spotlight-AI.exe
            artifacts/Smart-Spotlight-AI-mac-universal/Smart-Spotlight-AI
            artifacts/Smart-Spotlight-AI-linux-amd64/Smart-Spotlight-AI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}